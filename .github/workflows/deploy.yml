name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Setup Zola
        run: |
          curl -s -L https://github.com/getzola/zola/releases/download/v0.17.1/zola-v0.17.1-x86_64-unknown-linux-gnu.tar.gz | tar -xz -C /usr/local/bin zola
          chmod +x /usr/local/bin/zola
      
      - name: Build site
        run: zola build --base-url https://andres-herbozo.github.io/devops-fundamentals/
      
      - name: Build Summary
        run: |
          echo "## 🚀 Build Completado" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Sitio DevOps construido exitosamente" >> $GITHUB_STEP_SUMMARY
          echo "- 📁 Archivos generados en ./public" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 URL: https://andres-herbozo.github.io/devops-fundamentals/" >> $GITHUB_STEP_SUMMARY
          echo "- ⏱️ Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Test job
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Zola
        run: |
          curl -s -L https://github.com/getzola/zola/releases/download/v0.17.1/zola-v0.17.1-x86_64-unknown-linux-gnu.tar.gz | tar -xz -C /usr/local/bin zola
          chmod +x /usr/local/bin/zola
      
      - name: Start Zola server for testing
        run: |
          zola serve --port 1111 --interface 0.0.0.0 &
          sleep 15
      
      - name: Verify server is running
        run: |
          curl -f http://localhost:1111 || exit 1
      
      - name: Run Cypress tests manually
        run: |
          npx cypress run \
            --config baseUrl=http://localhost:1111 \
            --spec cypress/e2e/devops-specific.cy.js \
            --browser chrome \
            --headless
      
      - name: Test Summary
        run: |
          echo "## 🧪 Tests Ejecutados" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Cypress tests completados exitosamente" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 Archivo: devops-specific.cy.js" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Servidor: http://localhost:1111" >> $GITHUB_STEP_SUMMARY
          echo "- ⏱️ Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Deploy Summary
        run: |
          echo "## 🚀 Deploy Iniciado" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build y tests completados exitosamente" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Desplegando a GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "- 📁 Usando artifact del build" >> $GITHUB_STEP_SUMMARY
          echo "- ⏱️ Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
